name: 自动获取idea激活码

on:
  push:
#    branches: [ main ]
    # Sequence of patterns matched against refs/tags
#    tags:
#      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:
  schedule:
    - cron: '0 16 * * *'
#  watch:
#    types: started

jobs:
#  get_date:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Set current date as env variable
#        run: echo "NOW=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
#      - name: test date
#        run: echo $NOW
  create_release:
    #needs: check_version
    runs-on: ubuntu-latest
    steps:
      - name: Set current date as env variable
        run: echo "NOW=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - uses: actions/create-release@master
        id: createRelease
        name: Create Runner Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: env.NOW
          release_name: Release "code.txt"
          prerelease: false
      - name: Echo current date
        run: echo $NOW
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - uses: actions/checkout@v2
      - name: 初始化Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: 更新激活码
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python3 get_jihuoma.py
      - name: Check release version
        id: checkReleaseVersion
        uses: actions/github-script@v3.1.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
              const date = new Date().toLocaleDateString().replaceAll('/','-');
              const releaseResponse = await github.repos.getReleaseByTag({
                owner: 'natpacket',
                repo: 'GetIdeaCode',
                tag: date
              })
              const {
                data: { id: releaseId, html_url: htmlUrl, upload_url: uploadUrl }
              } = releaseResponse;
              core.setOutput('id', releaseId);
              core.setOutput('html_url', htmlUrl);
              core.setOutput('upload_url', uploadUrl);
            } catch (e) {
              core.setFailed(e);
            }
      - name: Upload code.txt
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: '${{ steps.checkReleaseVersion.outputs.upload_url }}'
          asset_path: '${{ github.workspace }}/code.txt'
          asset_name: 'code.txt'
          asset_content_type: application/octet-stream
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 1